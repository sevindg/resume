// ============================================================================
// –°–û–í–†–ï–ú–ï–ù–ù–´–ô –°–ê–ô–¢-–ü–û–†–¢–§–û–õ–ò–û - JAVASCRIPT
// ============================================================================

document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    initAnimatedBackground();
    initGeometricShapes();
    initParallaxDots();
    initScrollAnimations();
    initPortfolioEffects();
    initPortfolioGallery();
    initSmoothScroll();
    initContactForm();
    
    console.log('üöÄ –°–∞–π—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
});

// ============================================================================
// –ê–ù–ò–ú–ò–†–û–í–ê–ù–ù–´–ô –§–û–ù –° –ß–ê–°–¢–ò–¶–ê–ú–ò
// ============================================================================

function initAnimatedBackground() {
    const bgContainer = document.getElementById('animatedBg');
    const particleCount = 80;
    
    for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.className = 'particle';
        
        // –°–ª—É—á–∞–π–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã —á–∞—Å—Ç–∏—Ü
        const size = Math.random() * 12 + 6; // –æ—Ç 10px –¥–æ 30px
        particle.style.width = size + 'px';
        particle.style.height = size + 'px';
        
        // –°–ª—É—á–∞–π–Ω–æ–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
        particle.style.left = Math.random() * 100 + '%';
        
        // –°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
        particle.style.animationDelay = Math.random() * 20 + 's';
        
        // –°–ª—É—á–∞–π–Ω–∞—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        particle.style.animationDuration = (15 + Math.random() * 15) + 's';
        
        bgContainer.appendChild(particle);
    }
    
    // –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å –º—ã—à—å—é - —á–∞—Å—Ç–∏—Ü—ã —Å–ª–µ–¥—É—é—Ç –∑–∞ –∫—É—Ä—Å–æ—Ä–æ–º
    let mouseX = 0;
    let mouseY = 0;
    
    document.addEventListener('mousemove', function(e) {
        mouseX = e.clientX;
        mouseY = e.clientY;
        
        // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —á–∞—Å—Ç–∏—Ü—É –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏ –º—ã—à–∏
        if (Math.random() > 0.95) { // 5% —à–∞–Ω—Å —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Å—Ç–∏—Ü—ã
            createMouseParticle(mouseX, mouseY);
        }
    });
    
    function createMouseParticle(x, y) {
        const particle = document.createElement('div');
        particle.className = 'mouse-particle';
        
        particle.style.cssText = `
            position: fixed;
            left: ${x}px;
            top: ${y}px;
            width: 4px;
            height: 4px;
            background: rgba(52, 152, 219, 0.6);
            border-radius: 50%;
            pointer-events: none;
            z-index: 1000;
            animation: mouseParticleFade 1s ease-out forwards;
        `;
        
        document.body.appendChild(particle);
        
        // –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—Ü—É –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            particle.remove();
        }, 1000);
    }
}

function initGeometricShapes() {
    const shapesContainer = document.getElementById('geometricShapes');
    const shapes = ['circle', 'square', 'triangle'];
    const shapeCount = 8;
    
    for (let i = 0; i < shapeCount; i++) {
        const shape = document.createElement('div');
        const shapeType = shapes[Math.floor(Math.random() * shapes.length)];
        
        shape.className = `shape shape--${shapeType}`;
        
        // –†–∞–∑–º–µ—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–∏–≥—É—Ä—ã
        if (shapeType === 'circle' || shapeType === 'square') {
            const size = Math.random() * 60 + 40; // –æ—Ç 40px –¥–æ 100px
            shape.style.width = size + 'px';
            shape.style.height = size + 'px';
        }
        
        // –°–ª—É—á–∞–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
        shape.style.left = Math.random() * 100 + '%';
        shape.style.top = Math.random() * 100 + '%';
        
        // –°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
        shape.style.animationDelay = Math.random() * 60 + 's';
        
        shapesContainer.appendChild(shape);
    }
}

// ============================================================================
// –ü–ê–†–ê–õ–õ–ê–ö–° –¢–û–ß–ö–ò
// ============================================================================

function initParallaxDots() {
    const dotsContainer = document.getElementById('parallaxDots');
    const dotsCount = 30;
    
    // –°–æ–∑–¥–∞–µ–º —Ç–æ—á–∫–∏
    for (let i = 0; i < dotsCount; i++) {
        const dot = document.createElement('div');
        dot.className = 'parallax-dot';
        
        // –°–ª—É—á–∞–π–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
        dot.style.left = Math.random() * 100 + '%';
        dot.style.top = Math.random() * 100 + '%';
        
        // –°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
        dot.style.animationDelay = Math.random() * 8 + 's';
        dot.style.animationDuration = (6 + Math.random() * 4) + 's';
        
        dotsContainer.appendChild(dot);
    }
    
    // –ü–∞—Ä–∞–ª–ª–∞–∫—Å —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    let ticking = false;
    
    function updateParallax() {
        const scrolled = window.pageYOffset;
        const dots = document.querySelectorAll('.parallax-dot');
        
        dots.forEach((dot, index) => {
            const speed = 0.3 + (index % 3) * 0.2;
            const yPos = scrolled * speed;
            dot.style.transform = `translateY(${yPos}px)`;
        });
        
        ticking = false;
    }
    
    window.addEventListener('scroll', function() {
        if (!ticking) {
            requestAnimationFrame(updateParallax);
            ticking = true;
        }
    });
}

// ============================================================================
// –ê–ù–ò–ú–ê–¶–ò–ò –ü–†–ò –°–ö–†–û–õ–õ–ï
// ============================================================================

function initScrollAnimations() {
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver(function(entries) {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const delay = entry.target.dataset.delay || 0;
                
                setTimeout(() => {
                    entry.target.classList.add('visible');
                }, delay);
                
                // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
                observer.unobserve(entry.target);
            }
        });
    }, observerOptions);
    
    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –≤—Å–µ–º–∏ –∞–Ω–∏–º–∏—Ä—É–µ–º—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
    const animatedElements = document.querySelectorAll(`
        .animate-fade-zoom,
        .animate-slide-up,
        .animate-slide-left,
        .animate-slide-right,
        .animate-zoom-in,
        .animate-timeline,
        .animate-fade-in
    `);
    
    animatedElements.forEach(el => {
        observer.observe(el);
    });
}

// ============================================================================
// –≠–§–§–ï–ö–¢–´ –î–õ–Ø –ö–ê–†–¢–û–ß–ï–ö –ü–û–†–¢–§–û–õ–ò–û
// ============================================================================

function initPortfolioEffects() {
    // –£–±–∏—Ä–∞–µ–º —Å–ª–æ–∂–Ω—ã–µ 3D —ç—Ñ—Ñ–µ–∫—Ç—ã, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç–æ–µ –Ω–∞–≤–µ–¥–µ–Ω–∏–µ
    console.log('‚úÖ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ —ç—Ñ—Ñ–µ–∫—Ç—ã —É–ø—Ä–æ—â–µ–Ω—ã');
}

// ============================================================================
// –ü–û–õ–ù–û–≠–ö–†–ê–ù–ù–ê–Ø –ì–ê–õ–ï–†–ï–Ø –ü–û–†–¢–§–û–õ–ò–û
// ============================================================================

function initPortfolioGallery() {
    const portfolioCards = document.querySelectorAll('.portfolio-card');
    const galleryModal = document.getElementById('galleryModal');
    const galleryImage = document.getElementById('galleryImage');
    const galleryTitle = document.getElementById('galleryTitle');
    const galleryDescription = document.getElementById('galleryDescription');
    const galleryCurrentIndex = document.getElementById('galleryCurrentIndex');
    const galleryTotalCount = document.getElementById('galleryTotalCount');
    const galleryClose = document.getElementById('galleryClose');
    const galleryPrev = document.getElementById('galleryPrev');
    const galleryNext = document.getElementById('galleryNext');
    const galleryOverlay = document.getElementById('galleryOverlay');
    
    let currentGallery = [];
    let currentImageIndex = 0;
    
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É
    portfolioCards.forEach(card => {
        card.addEventListener('click', function() {
            const galleryId = this.dataset.gallery;
            const title = this.querySelector('.portfolio-card__title').textContent;
            const description = this.querySelector('.portfolio-card__description').textContent;
            
            console.log(`üéØ –ö–ª–∏–∫ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ: ${galleryId}, –∑–∞–≥–æ–ª–æ–≤–æ–∫: ${title}`);
            
            openGallery(galleryId, title, description);
        });
    });
    
    // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –≥–∞–ª–µ—Ä–µ–∏ –Ω–∞–π–¥–µ–Ω—ã
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–∞–ª–µ—Ä–µ–π:');
    for (let i = 1; i <= 6; i++) {
        const galleryData = document.querySelector(`.gallery-data [data-gallery="gallery${i}"]`);
        if (galleryData) {
            const imageCount = galleryData.querySelectorAll('img').length;
            console.log(`‚úÖ Gallery ${i}: ${imageCount} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
        } else {
            console.log(`‚ùå Gallery ${i}: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≥–∞–ª–µ—Ä–µ–∏
    function openGallery(galleryId, title, description) {
        const galleryData = document.querySelector(`.gallery-data [data-gallery="${galleryId}"]`);
        if (!galleryData) {
            console.error(`‚ùå –ì–∞–ª–µ—Ä–µ—è ${galleryId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
            return;
        }
        
        currentGallery = Array.from(galleryData.querySelectorAll('img'));
        currentImageIndex = 0;
        
        console.log(`üñºÔ∏è –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥–∞–ª–µ—Ä–µ—é ${galleryId} —Å ${currentGallery.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:`, currentGallery.map(img => img.src));
        
        galleryTitle.textContent = title;
        galleryDescription.textContent = description;
        galleryTotalCount.textContent = currentGallery.length;
        
        showCurrentImage();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        galleryModal.classList.add('active');
        document.body.style.overflow = 'hidden';
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            galleryModal.style.transform = 'scale(1)';
        }, 50);
    }
    
    // –ü–æ–∫–∞–∑ —Ç–µ–∫—É—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    function showCurrentImage() {
        if (currentGallery.length === 0) return;
        
        const currentImg = currentGallery[currentImageIndex];
        galleryImage.src = currentImg.src;
        galleryImage.alt = currentImg.alt;
        galleryCurrentIndex.textContent = currentImageIndex + 1;
        
        // –ê–Ω–∏–º–∞—Ü–∏—è —Å–º–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        galleryImage.style.opacity = '0';
        galleryImage.style.transform = 'scale(0.9)';
        
        setTimeout(() => {
            galleryImage.style.opacity = '1';
            galleryImage.style.transform = 'scale(1)';
        }, 100);
    }
    
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≥–∞–ª–µ—Ä–µ–µ
    function nextImage() {
        currentImageIndex = (currentImageIndex + 1) % currentGallery.length;
        showCurrentImage();
    }
    
    function prevImage() {
        currentImageIndex = (currentImageIndex - 1 + currentGallery.length) % currentGallery.length;
        showCurrentImage();
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏
    function closeGallery() {
        galleryModal.style.transform = 'scale(0.9)';
        
        setTimeout(() => {
            galleryModal.classList.remove('active');
            document.body.style.overflow = '';
            galleryModal.style.transform = '';
        }, 200);
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    galleryClose.addEventListener('click', closeGallery);
    galleryOverlay.addEventListener('click', closeGallery);
    galleryNext.addEventListener('click', nextImage);
    galleryPrev.addEventListener('click', prevImage);
    
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    document.addEventListener('keydown', function(e) {
        if (!galleryModal.classList.contains('active')) return;
        
        switch(e.key) {
            case 'Escape':
                closeGallery();
                break;
            case 'ArrowLeft':
                prevImage();
                break;
            case 'ArrowRight':
                nextImage();
                break;
        }
    });
}

// ============================================================================
// –°–õ–ê–ô–î–ï–†–´ –ü–û–†–¢–§–û–õ–ò–û (–£–ë–ò–†–ê–ï–ú, –¢–ê–ö –ö–ê–ö –¢–ï–ü–ï–†–¨ –ì–ê–õ–ï–†–ï–Ø)
// ============================================================================

// –°—Ç–∞—Ä–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–ª–∞–π–¥–µ—Ä–æ–≤ —É–¥–∞–ª–µ–Ω–∞ - —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–∞—è –≥–∞–ª–µ—Ä–µ—è

// ============================================================================
// –ü–õ–ê–í–ù–´–ô –°–ö–†–û–õ–õ
// ============================================================================

function initSmoothScroll() {
    // –ü–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª –¥–ª—è —è–∫–æ—Ä–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
            e.preventDefault();
            
            const targetId = this.getAttribute('href');
            const targetElement = document.querySelector(targetId);
            
            if (targetElement) {
                const targetPosition = targetElement.offsetTop - 80;
                
                window.scrollTo({
                    top: targetPosition,
                    behavior: 'smooth'
                });
            }
        });
    });
    
    // –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª —Å –∏–Ω–µ—Ä—Ü–∏–µ–π
    let isScrolling = false;
    
    window.addEventListener('scroll', function() {
        if (!isScrolling) {
            window.requestAnimationFrame(function() {
                // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
                handleScrollEffects();
                isScrolling = false;
            });
            isScrolling = true;
        }
    });
}

function handleScrollEffects() {
    const scrolled = window.pageYOffset;
    
    // –≠—Ñ—Ñ–µ–∫—Ç –ø–∞—Ä–∞–ª–ª–∞–∫—Å–∞ –¥–ª—è hero —Å–µ–∫—Ü–∏–∏
    const hero = document.querySelector('.hero');
    if (hero) {
        const heroOffset = scrolled * 0.5;
        hero.style.transform = `translateY(${heroOffset}px)`;
    }
}

// ============================================================================
// –§–û–†–ú–ê –û–ë–†–ê–¢–ù–û–ô –°–í–Ø–ó–ò
// ============================================================================

function initContactForm() {
    const form = document.getElementById('contactForm');
    
    if (!form) return;
    
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
        const formData = new FormData(form);
        const name = formData.get('name')?.toString().trim();
        const email = formData.get('email')?.toString().trim();
        const message = formData.get('message')?.toString().trim();
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!validateForm(name, email, message)) {
            return;
        }
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        submitForm(form, { name, email, message });
    });
}

function validateForm(name, email, message) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏
    if (!name || name.length < 2) {
        showFormMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è (–º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞)', 'error');
        return false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ email
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!email || !emailRegex.test(email)) {
        showFormMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å', 'error');
        return false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (!message || message.length < 10) {
        showFormMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤)', 'error');
        return false;
    }
    
    return true;
}

function submitForm(form, data) {
    const submitButton = form.querySelector('button[type="submit"]');
    const originalText = submitButton.textContent;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    submitButton.textContent = '–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è...';
    submitButton.disabled = true;
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    setTimeout(() => {
        // –£—Å–ø–µ—à–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
        showFormMessage('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –Ø —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.', 'success');
        
        // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
        form.reset();
        
        // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        submitButton.textContent = originalText;
        submitButton.disabled = false;
        
        console.log('üìß –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:', data);
    }, 2000);
}

function showFormMessage(message, type) {
    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    const existingMessage = document.querySelector('.form-message');
    if (existingMessage) {
        existingMessage.remove();
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const messageElement = document.createElement('div');
    messageElement.className = `form-message form-message--${type}`;
    messageElement.textContent = message;
    
    // –°—Ç–∏–ª–∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
    messageElement.style.cssText = `
        padding: 1rem;
        margin-top: 1rem;
        border-radius: 8px;
        font-size: 0.95rem;
        font-weight: 500;
        ${type === 'success' ? 
            'background: #d4edda; color: #155724; border: 1px solid #c3e6cb;' : 
            'background: #f8d7da; color: #721c24; border: 1px solid #f5c6cb;'
        }
        animation: slideInUp 0.3s ease;
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Ñ–æ—Ä–º—ã
    const form = document.getElementById('contactForm');
    form.appendChild(messageElement);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        messageElement.style.animation = 'slideOutUp 0.3s ease';
        setTimeout(() => messageElement.remove(), 300);
    }, 5000);
}

// ============================================================================
// –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –£–¢–ò–õ–ò–¢–´
// ============================================================================

// –î–µ–±–∞—É–Ω—Å —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Intersection Observer
function isIntersectionObserverSupported() {
    return 'IntersectionObserver' in window;
}

// –§–æ–ª–ª–±—ç–∫ –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
if (!isIntersectionObserverSupported()) {
    console.warn('‚ö†Ô∏è IntersectionObserver –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –ê–Ω–∏–º–∞—Ü–∏–∏ –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
    
    // –ü—Ä–æ—Å—Ç–æ–π —Ñ–æ–ª–ª–±—ç–∫ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    window.addEventListener('load', function() {
        const animatedElements = document.querySelectorAll(`
            .animate-fade-zoom,
            .animate-slide-up,
            .animate-slide-left,
            .animate-slide-right,
            .animate-zoom-in,
            .animate-timeline,
            .animate-fade-in
        `);
        
        animatedElements.forEach(el => {
            el.classList.add('visible');
        });
    });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
document.addEventListener('DOMContentLoaded', function() {
    const images = document.querySelectorAll('img');
    
    images.forEach((img, index) => {
        img.addEventListener('error', function() {
            console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${img.src}`);
            
            // –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
            img.src = `data:image/svg+xml;base64,${btoa(`
                <svg width="400" height="300" viewBox="0 0 400 300" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect width="400" height="300" fill="#f8fafc"/>
                    <rect x="150" y="120" width="100" height="60" rx="8" fill="#e2e8f0"/>
                    <circle cx="170" cy="140" r="8" fill="#cbd5e0"/>
                    <path d="M180 160L190 150L210 170L200 180L180 160Z" fill="#cbd5e0"/>
                    <text x="200" y="200" text-anchor="middle" fill="#64748b" font-family="system-ui" font-size="14">
                        –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ
                    </text>
                </svg>
            `)}`;
            
            img.alt = '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ';
        });
        
        img.addEventListener('load', function() {
            console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${img.src.split('/').pop()}`);
        });
    });
});

// –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Ñ–æ—Ä–º—ã
const style = document.createElement('style');
style.textContent = `
    @keyframes slideInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    @keyframes slideOutUp {
        from {
            opacity: 1;
            transform: translateY(0);
        }
        to {
            opacity: 0;
            transform: translateY(-20px);
        }
    }
`;
// –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –±–ª–æ–∫–∞ "–û–±–æ –º–Ω–µ" - –í–∞—Ä–∏–∞–Ω—Ç 2
function animateAboutSection() {
    const aboutText = document.querySelector('.about__text');
    const aboutPhoto = document.querySelector('.about__photo');
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                aboutText.classList.add('visible');
                aboutPhoto.classList.add('visible');
                
                // –û—Ç–∫–ª—é—á–∞–µ–º observer –ø–æ—Å–ª–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è
                observer.unobserve(entry.target);
            }
        });
    }, { 
        threshold: 0.3, // –°—Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ–≥–¥–∞ 30% —ç–ª–µ–º–µ–Ω—Ç–∞ –≤–∏–¥–Ω–æ
        rootMargin: '0px 0px -50px 0px' // –ù–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É
    });
    
    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –±–ª–æ–∫–æ–º about
    const aboutSection = document.querySelector('.about');
    if (aboutSection) {
        observer.observe(aboutSection);
    }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    animateAboutSection();
});

// –¢–∞–∫–∂–µ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
document.addEventListener('readystatechange', function() {
    if (document.readyState === 'complete') {
        animateAboutSection();
    }
});
document.head.appendChild(style);
